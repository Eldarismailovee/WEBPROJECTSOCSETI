@model IEnumerable<Store2.Domain.ShoppingCart>
@{
    ViewBag.Title = "Корзина";
}
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<h2 class="text-center mt-4 mb-4">@ViewBag.Title</h2>
<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <table class="table table-bordered table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>Изображение</th>
                        <th>Продукт</th>
                        <th>Цена</th>
                        <th>Количество</th>
                        <th>Итого</th>
                        <th>Действие</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <img src="@item.Product.ImageUrl" class="img-fluid" style="max-width: 100px;" alt="@item.Product.Name">
                            </td>
                            <td>@item.Product.Name</td>
                            <td>@item.Product.Price.ToString("C")</td>
                            <td>
                                <div class="input-group" style="max-width: 120px;">
                                    <div class="input-group-prepend">
                                        <button class="btn btn-outline-secondary" type="button" onclick="changeQuantity('@item.Id', -1)">-</button>
                                    </div>
                                    <input type="text" class="form-control text-center" id="quantity-@item.Id" value="@item.Quantity" data-max="@item.Product.Quantity">
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-secondary" type="button" onclick="changeQuantity('@item.Id', 1)">+</button>
                                    </div>
                                </div>
                            </td>
                            <td>@(item.Product.Price * item.Quantity).ToString("C")</td>
                            <td>
                                <button class="btn btn-danger" onclick="removeFromCart('@item.Id')">Удалить</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <div class="form-group">
                <label for="deliveryMethod">Выберите способ доставки:</label>
                <select id="deliveryMethod" class="form-control">
                    @foreach (var method in ViewBag.DeliveryMethods)
                    {
                        <option value="@method.Id">@method.Name - @method.Cost.ToString("C")</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-lg-6 text-right">
            <button class="btn btn-warning mt-4 mr-2" onclick="clearCart()">Очистить корзину</button>
            <button class="btn btn-primary mt-4" onclick="checkout()">Сделать оплату</button>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>
<script>
    function setDeliveryMethod() {
        var selectedMethodId = $('#deliveryMethod').val();
        $.post('@Url.Action("SetDeliveryMethod", "ShoppingCarts")', { deliveryMethodId: selectedMethodId }, function(result) {
            if (result.success) {
                alert(result.message);
            } else {
                alert(result.message);
            }
        });
    }

    function changeQuantity(productId, delta) {
        var quantityInput = document.getElementById('quantity-' + productId);
        var maxQuantity = parseInt(quantityInput.getAttribute('data-max'));
        var currentQuantity = parseInt(quantityInput.value);
        var newQuantity = currentQuantity + delta;
        if (newQuantity > 0 && newQuantity <= maxQuantity) {
            quantityInput.value = newQuantity;
        } else if (newQuantity > maxQuantity) {
            quantityInput.value = maxQuantity;
            alert('Максимальное доступное количество товара: ' + maxQuantity);
        }
    }

    function removeFromCart(productId) {
        $.post('@Url.Action("RemoveFromCart", "ShoppingCarts")', { id: productId }, function(result) {
            if (result.success) {
                location.reload();
            } else {
                alert('Ошибка при удалении товара из корзины');
            }
        });
    }

    function clearCart() {
        $.post('@Url.Action("ClearCart", "ShoppingCarts")', function(result) {
            if (result.success) {
                location.reload();
            } else {
                alert('Ошибка при очистке корзины');
            }
        });
    }

    function checkout() {
        var selectedMethodId = $('#deliveryMethod').val();
        $.post('@Url.Action("Checkout", "ShoppingCarts")', { deliveryMethodId: selectedMethodId }, function(result) {
            if (result.success) {
                alert(result.message);
                window.location.href = '@Url.Action("OrderConfirmed", "ShoppingCarts")';
            } else {
                alert(result.message);
            }
        });
    }

    $(document).ready(function() {
        $('input[id^="quantity-"]').on('input', function() {
            var maxQuantity = parseInt($(this).data('max'));
            var value = $(this).val();

            // Удаляем все нецифровые символы
            if (!/^\d+$/.test(value)) {
                value = value.replace(/\D/g, '');
                $(this).val(value);
            }

            // Проверяем максимальное значение
            if (parseInt(value) > maxQuantity) {
                $(this).val(maxQuantity);
                alert('Максимальное доступное количество товара: ' + maxQuantity);
            }
        });
    });
</script>
